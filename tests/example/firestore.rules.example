rules_version = '2';
service cloud.firestore {

  // ユーザ認証の関数
  function isAuthUser(auth, userId) {
    return auth != null && auth.uid == userId // 認証があり、uidとuserIdが一致する
  }

  // スキーマ検証の関数
  function isValidUserSchema(user) {
    return user.size() == 3 // ドキュメントは3つのプロパティを持つこと
    && 'name' in user && user.name is string // nameのプロパティがあり、nameの型がstringであること
    && 'gender' in user && user.gender is string // genderのプロパティがあり、genderの型がstringであること
    && 'age' in user && user.age is number // ageのプロパティがあり、ageの型がnumberであること
  }

  // 値のバリデーションの関数
  function isValidUserData(user) {
    return 1 <= user.name.size() && user.name.size() <= 30 // nameは1文字以上30文字以内であること
      && user.gender.matches('male|female|genderDiverse') // `gender`は`male`,`female`,`genderDiverse`の3種類だけが選べる
      && 0 <= user.age && user.age <= 150 // `age`は0~150の数値である
  }

  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if isAuthUser(request.auth, userId);
      allow create: if isAuthUser(request.auth, userId) && isValidUserSchema(request.resource.data) && isValidUserData(request.resource.data);
      allow update: if isAuthUser(request.auth, userId) && isValidUserSchema(request.resource.data) && isValidUserData(request.resource.data);
      allow delete: if isAuthUser(request.auth, userId);
    }
  }
}
